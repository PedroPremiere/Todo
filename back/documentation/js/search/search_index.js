var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractFactory.html",[0,0.081,1,2.053]],["body/classes/AbstractFactory.html",[0,0.102,1,3.249,2,2.321,3,0.334,4,0.386,5,0.284,6,4.207,7,2.906,8,0.44,9,2.649,10,4.004,11,3.197,12,2.321,13,2.321,14,0.031,15,3.658,16,0.617,17,4.003,18,0.386,19,2.321,20,3.342,21,0.386,22,0.025,23,0.025]],["title/controllers/AppController.html",[24,0.779,25,2.053]],["body/controllers/AppController.html",[0,0.096,3,0.314,4,0.363,5,0.267,8,0.414,14,0.032,16,0.58,18,0.467,21,0.363,22,0.024,23,0.024,24,1.185,25,3.125,26,1.284,27,3.144,28,0.995,29,4.725,30,1.517,31,3.766,32,0.705,33,2.548,34,0.522,35,2.818,36,3.144,37,1.183,38,1.805,39,0.641,40,3.766]],["title/modules/AppModule.html",[41,1.283,42,2.053]],["body/modules/AppModule.html",[0,0.071,3,0.233,4,0.269,5,0.198,14,0.032,18,0.544,21,0.269,22,0.02,23,0.02,25,2.963,26,1.349,34,0.387,35,2.883,36,2.329,41,1.852,42,3.975,43,1.337,44,1.224,45,1.617,46,1.617,47,1.337,48,2.665,49,1.617,50,2.329,51,2.329,52,2.329,53,3.18,54,3.18,55,3.18,56,2.629,57,2.293,58,1.617,59,1.617,60,2.79,61,3.303,62,2.79,63,2.79,64,2.79,65,2.79,66,2.329]],["title/injectables/AppService.html",[35,1.674,67,0.542]],["body/injectables/AppService.html",[0,0.102,3,0.334,4,0.386,5,0.284,8,0.44,14,0.031,16,0.617,18,0.386,21,0.386,22,0.025,23,0.025,28,1.034,29,4.832,32,0.75,33,2.649,34,0.555,35,2.649,39,0.681,67,0.858,68,1.483,69,3.342,70,4.003,71,4.003,72,4.003]],["title/controllers/CreateController.html",[24,0.779,73,2.053]],["body/controllers/CreateController.html",[0,0.087,3,0.284,4,0.328,5,0.241,8,0.373,14,0.032,16,0.524,18,0.491,21,0.328,22,0.022,23,0.022,24,1.108,26,1.16,28,0.93,30,1.37,32,0.637,34,0.471,37,1.068,39,0.579,56,2.445,66,2.838,73,2.922,74,2.838,75,1.602,76,2.628,77,3.4,78,2.608,79,4.533,80,3.4,81,0.983,82,0.905,83,0.698,84,0.983,85,2.383,86,1.37,87,2.838,88,2.468,89,2.192,90,3.4,91,3.4]],["title/injectables/CreateService.html",[56,1.527,67,0.542]],["body/injectables/CreateService.html",[0,0.083,3,0.273,4,0.315,5,0.232,8,0.359,14,0.032,16,0.681,18,0.482,21,0.315,22,0.022,23,0.022,28,0.907,32,0.613,34,0.454,37,1.028,38,1.569,39,0.557,56,2.118,67,0.752,68,1.212,75,1.571,78,2.568,81,1.278,82,1.176,83,0.907,84,1.278,85,2.323,86,1.318,89,2.11,92,2.732,93,2.848,94,1.569,95,1.72,96,1.81,97,3.273,98,4.419,99,3.273,100,1.436,101,3.273]],["title/classes/CreateTodoTdo.html",[0,0.081,78,1.527]],["body/classes/CreateTodoTdo.html",[0,0.127,2,1.888,3,0.272,4,0.314,5,0.231,8,0.358,9,2.315,12,1.888,13,1.888,14,0.032,16,0.678,18,0.424,21,0.314,22,0.022,23,0.022,30,1.775,33,2.315,39,0.554,78,2.111,83,0.904,102,2.719,103,3.623,104,3.623,105,2.719,106,3.677,107,3.258,108,3.677,109,3.677,110,2.719,111,3.258,112,3.677,113,3.677,114,2.365,115,3.197,116,2.365,117,2.365,118,2.719,119,2.839,120,2.719]],["title/controllers/DeleteController.html",[24,0.779,121,2.053]],["body/controllers/DeleteController.html",[0,0.089,3,0.291,4,0.336,5,0.247,8,0.383,14,0.031,16,0.537,18,0.444,21,0.336,22,0.023,23,0.023,24,1.127,26,1.188,28,0.946,30,1.404,32,0.652,34,0.483,37,1.094,39,0.593,75,1.621,76,2.671,81,1.008,82,0.927,83,0.715,84,1.008,86,1.404,121,2.97,122,2.909,123,2.53,124,2.714,125,4.608,126,3.485,127,2.209,128,2.909,129,2.53,130,2.714,131,3.485,132,2.53,133,3.485]],["title/injectables/DeleteService.html",[67,0.542,130,1.674]],["body/injectables/DeleteService.html",[0,0.075,3,0.245,4,0.284,5,0.209,8,0.323,14,0.032,16,0.633,18,0.396,21,0.284,22,0.02,23,0.02,28,0.843,32,0.551,34,0.408,37,0.924,38,1.41,39,0.501,67,0.699,68,1.09,75,1.486,81,1.188,82,1.093,83,0.843,84,1.188,86,1.185,94,1.41,95,1.547,96,1.753,100,1.291,117,2.136,124,2.487,127,2.455,128,3.429,130,2.159,134,2.456,135,2.942,136,4.107,137,2.942,138,3.435,139,2.648,140,1.969,141,1.897,142,2.982,143,2.381,144,2.136,145,2.942,146,2.942]],["title/controllers/EditController.html",[24,0.779,147,2.053]],["body/controllers/EditController.html",[0,0.082,3,0.269,4,0.311,5,0.229,8,0.354,14,0.032,16,0.497,18,0.479,21,0.311,22,0.022,23,0.022,24,1.07,26,1.101,28,0.898,30,1.3,32,0.604,34,0.447,37,1.014,39,0.549,75,1.56,76,2.537,78,2.553,81,0.933,82,0.859,83,0.662,84,0.933,85,2.8,86,1.3,87,3.654,89,2.08,123,2.343,124,2.611,127,2.381,129,2.343,132,2.343,147,2.822,148,2.694,149,4.377,150,3.227,151,3.227,152,2.611,153,3.227,154,3.227]],["title/injectables/EditService.html",[67,0.542,152,1.674]],["body/injectables/EditService.html",[0,0.073,3,0.238,4,0.275,5,0.203,8,0.314,14,0.032,16,0.62,18,0.449,21,0.275,22,0.02,23,0.02,28,0.826,32,0.535,34,0.396,37,0.898,38,1.37,39,0.486,67,0.685,68,1.059,75,1.463,81,1.164,82,1.071,83,0.826,84,1.164,85,2.658,94,1.37,95,1.502,96,1.737,100,1.254,127,1.929,138,3.382,139,2.594,140,1.929,141,1.842,142,2.921,143,1.657,144,2.075,152,2.115,155,2.386,156,2.921,157,2.858,158,4.025,159,3.259,160,2.858,161,3.36,162,2.858,163,4.659,164,2.858]],["title/injectables/FactoryService.html",[19,1.846,67,0.542]],["body/injectables/FactoryService.html",[0,0.099,3,0.323,4,0.373,5,0.275,8,0.425,10,3.942,14,0.031,16,0.596,18,0.475,19,2.86,21,0.373,22,0.024,23,0.024,28,1.012,32,0.725,34,0.536,39,0.659,67,0.84,68,1.434,93,3.686,96,1.549,100,1.698,140,1.855,165,3.231,166,3.87]],["title/controllers/HealthController.html",[24,0.779,167,2.053]],["body/controllers/HealthController.html",[0,0.088,3,0.289,4,0.334,5,0.246,8,0.381,14,0.032,16,0.534,18,0.496,21,0.334,22,0.023,23,0.023,24,0.848,26,1.183,28,0.943,30,1.397,32,0.649,34,0.481,39,0.59,94,1.662,167,2.961,168,2.894,169,2.894,170,4.593,171,4.577,172,3.467,173,3.467,174,4.593,175,4.593,176,2.235,177,2.414,178,2.894,179,2.235,180,2.894,181,3.467,182,4.593,183,3.467,184,3.467,185,3.467]],["title/modules/HealthModule.html",[41,1.283,53,1.846]],["body/modules/HealthModule.html",[0,0.087,3,0.285,4,0.329,5,0.242,14,0.031,18,0.525,21,0.329,22,0.022,23,0.022,26,1.551,34,0.474,41,2.06,43,1.638,44,1.499,45,1.98,46,1.98,47,1.638,48,2.964,49,1.98,53,3.383,57,2.636,58,1.98,59,1.98,61,2.852,167,3.295,176,2.202,177,3.068,178,2.852,179,2.202,180,2.852,186,2.852,187,2.852,188,3.417,189,4.548,190,3.417]],["title/controllers/IndexController.html",[24,0.779,191,2.053]],["body/controllers/IndexController.html",[0,0.094,3,0.309,4,0.357,5,0.263,8,0.407,14,0.032,16,0.571,18,0.462,21,0.357,22,0.024,23,0.024,24,1.173,26,1.264,28,0.985,30,1.493,32,0.694,34,0.514,37,1.164,39,0.631,75,1.671,76,3.261,86,1.493,191,3.093,192,3.094,193,4.798,194,3.706,195,2.796,196,3.706,197,3.706]],["title/injectables/IndexService.html",[67,0.542,195,1.674]],["body/injectables/IndexService.html",[0,0.09,3,0.295,4,0.341,5,0.251,8,0.389,14,0.031,16,0.717,18,0.448,21,0.341,22,0.023,23,0.023,28,0.955,32,0.662,34,0.49,37,1.111,38,1.696,39,0.602,67,0.792,68,1.311,75,1.634,81,1.023,82,0.941,83,0.726,84,1.023,86,1.425,94,1.696,95,1.859,96,1.851,100,1.552,195,2.446,198,2.953,199,5.526,200,3.538,201,3.538,202,3.538]],["title/injectables/PrismaIndicatorService.html",[67,0.542,177,1.674]],["body/injectables/PrismaIndicatorService.html",[0,0.071,3,0.234,4,0.27,5,0.199,8,0.308,11,1.624,14,0.032,16,0.611,18,0.444,21,0.27,22,0.02,23,0.02,28,0.814,32,0.524,33,2.422,34,0.388,37,0.88,38,1.343,39,0.477,67,0.675,68,1.038,75,1.447,81,1.147,82,1.056,83,0.814,84,1.147,94,1.343,95,1.472,96,1.725,100,1.229,119,1.805,139,1.805,140,1.343,143,1.624,161,3.312,171,3.846,176,1.805,177,2.085,179,2.97,203,3.846,204,2.338,205,2.88,206,4.607,207,2.801,208,3.968,209,2.801,210,2.338,211,2.801,212,2.801,213,2.801,214,2.801,215,2.801,216,2.801,217,2.801,218,2.801,219,2.801,220,2.801,221,2.801,222,2.801,223,2.801]],["title/modules/PrismaModule.html",[41,1.283,54,1.846]],["body/modules/PrismaModule.html",[0,0.088,3,0.288,4,0.332,5,0.245,14,0.032,15,2.505,18,0.495,19,2,20,2.88,21,0.332,22,0.023,23,0.023,34,0.478,41,2.07,43,1.654,44,1.514,45,2,46,2,47,1.654,48,2.654,49,2.978,54,3.301,57,2.654,58,2,59,2,96,1.905,100,1.514,224,2.88,225,2.88,226,3.45,227,4.578,228,3.45,229,3.45]],["title/injectables/PrismaService.html",[67,0.542,96,1]],["body/injectables/PrismaService.html",[0,0.078,3,0.256,4,0.296,5,0.218,8,0.337,11,1.78,14,0.032,16,0.746,18,0.408,21,0.296,22,0.021,23,0.021,28,0.868,32,0.906,34,0.426,39,0.523,67,0.72,68,1.138,75,1.82,81,0.888,82,0.817,83,0.63,84,0.888,96,1.329,143,1.78,205,3.072,230,2.564,231,4.841,232,4.232,233,5.217,234,5.656,235,4.232,236,5.217,237,3.072,238,1.98,239,3.072,240,3.072,241,2.564,242,3.072,243,3.072,244,3.072,245,3.072]],["title/controllers/ShowController.html",[24,0.779,246,2.053]],["body/controllers/ShowController.html",[0,0.089,3,0.292,4,0.337,5,0.249,8,0.385,14,0.031,16,0.539,18,0.445,21,0.337,22,0.023,23,0.023,24,1.13,26,1.194,28,0.949,30,1.411,32,0.656,34,0.485,37,1.1,39,0.596,75,1.625,76,2.68,81,1.013,82,0.932,83,0.719,84,1.013,86,1.411,123,2.542,124,2.72,127,2.216,129,2.542,132,2.542,246,2.98,247,2.923,248,4.623,249,3.502,250,2.72,251,3.502,252,3.502]],["title/injectables/ShowService.html",[67,0.542,250,1.674]],["body/injectables/ShowService.html",[0,0.078,3,0.255,4,0.295,5,0.217,8,0.336,14,0.032,16,0.65,18,0.407,21,0.295,22,0.021,23,0.021,28,0.866,32,0.573,34,0.424,37,0.96,38,1.466,39,0.52,67,0.718,68,1.133,75,1.517,81,1.22,82,1.122,83,0.866,84,1.22,86,1.232,94,1.466,95,1.607,96,1.774,100,1.342,124,2.539,127,2.315,138,3.506,139,2.719,140,2.022,141,1.971,142,3.506,143,1.773,144,2.22,250,2.218,253,2.553,254,4.219,255,3.058,256,4.219,257,3.058]],["title/classes/TodoFactory.html",[0,0.081,258,2.312]],["body/classes/TodoFactory.html",[0,0.065,1,3.092,2,1.476,3,0.212,4,0.245,5,0.181,7,1.848,8,0.28,9,1.947,10,4.285,11,2.148,12,1.476,13,1.476,14,0.032,15,1.848,16,0.739,18,0.421,21,0.245,22,0.018,23,0.018,28,0.76,32,0.818,39,0.743,78,2.631,81,1.071,82,0.986,83,0.76,84,1.071,85,1.338,89,1.641,93,2.388,103,2.689,104,2.689,141,1.641,205,2.689,258,2.689,259,4.004,260,4.797,261,3.705,262,2.546,263,2.546,264,3.705,265,2.546,266,3.705,267,2.546,268,2.546,269,3.705,270,2.546,271,3.705,272,3.093,273,2.125,274,2.546,275,2.546,276,2.125,277,2.546,278,2.546,279,2.546,280,2.546,281,2.546]],["title/modules/TodoModule.html",[41,1.283,55,1.846]],["body/modules/TodoModule.html",[0,0.065,3,0.212,4,0.244,5,0.18,14,0.032,18,0.568,21,0.244,22,0.018,23,0.018,26,1.26,34,0.352,41,1.756,43,1.216,44,1.113,45,1.47,46,1.47,47,1.216,48,2.526,49,1.47,55,3.519,56,2.546,57,2.142,58,1.47,59,1.47,73,2.809,121,2.809,130,2.792,147,2.809,152,2.792,191,2.809,195,2.792,246,2.809,250,2.792,282,2.118,283,2.118,284,2.537,285,2.537,286,2.537,287,2.537,288,2.537,289,2.537,290,2.537,291,2.537,292,2.537,293,2.537,294,2.537]],["title/classes/TodoTdo.html",[0,0.081,159,2.053]],["body/classes/TodoTdo.html",[0,0.122,2,1.75,3,0.252,4,0.291,5,0.214,8,0.332,9,2.198,12,1.75,13,1.75,14,0.032,16,0.739,18,0.403,21,0.291,22,0.021,23,0.021,30,1.932,33,2.198,39,0.514,83,0.984,103,3.482,104,3.482,105,3.49,106,4.323,108,3.49,109,3.49,110,2.52,112,3.49,113,4.004,114,2.191,115,3.035,116,2.191,117,3.035,118,2.52,119,2.695,120,2.52,124,2.198,127,2.299,159,2.695,295,2.52,296,3.019,297,3.019,298,3.019]],["title/coverage.html",[299,2.797]],["body/coverage.html",[0,0.106,1,1.246,5,0.137,6,1.614,7,2.186,14,0.031,19,1.121,22,0.015,23,0.015,24,1.223,25,1.246,27,1.614,35,1.016,47,0.927,56,0.927,67,0.904,69,1.614,73,1.246,74,1.614,78,0.927,83,0.397,88,1.404,92,1.614,96,0.607,102,1.614,121,1.246,122,1.614,130,1.016,134,1.614,140,0.927,147,1.246,148,1.614,152,1.016,155,1.614,156,1.404,159,1.246,165,1.614,167,1.246,168,1.614,177,1.016,179,1.246,191,1.246,192,1.614,195,1.016,198,1.614,203,1.614,204,1.614,230,1.614,246,1.246,247,1.614,250,1.016,253,1.614,258,1.404,259,1.614,295,1.614,299,1.246,300,1.614,301,1.934,302,1.934,303,1.614,304,4.523,305,1.614,306,6.344,307,5.823,308,5.433,309,3.484,310,1.614,311,1.614,312,1.404,313,1.614,314,5.002,315,1.614,316,5.433,317,3.087,318,1.614,319,1.614,320,1.614,321,1.614,322,1.614,323,3.011,324,1.934,325,1.614,326,1.614,327,1.614,328,1.614,329,1.614,330,1.614,331,1.614,332,1.934,333,1.934]],["title/dependencies.html",[44,1.68,334,2.224]],["body/dependencies.html",[0,0.124,14,0.032,22,0.024,23,0.024,34,0.525,44,1.662,114,2.749,116,2.749,176,2.441,241,3.161,272,3.161,273,3.161,335,3.787,336,5.374,337,3.787,338,3.787,339,3.787,340,3.787,341,3.787,342,3.787,343,3.787,344,3.787,345,3.787,346,3.787,347,3.787,348,3.787,349,3.787,350,3.787,351,3.787,352,3.787,353,3.161,354,3.787]],["title/miscellaneous/functions.html",[355,1.717,356,3.196]],["body/miscellaneous/functions.html",[8,0.323,14,0.03,22,0.02,23,0.02,32,0.769,33,1.547,47,2.268,81,1.689,82,1.554,83,0.604,84,1.689,88,2.982,156,2.982,238,1.897,315,2.456,317,2.456,318,3.429,319,3.429,320,3.429,321,2.456,322,3.429,325,2.456,326,3.95,327,2.456,328,2.456,329,2.456,330,2.456,331,3.429,355,1.897,356,2.456,357,2.942,358,4.732,359,2.942,360,2.942,361,2.942,362,2.942,363,2.942,364,2.942,365,2.942,366,4.107,367,2.942,368,2.942,369,4.107,370,2.942,371,2.942,372,2.942,373,5.121,374,2.942,375,2.942,376,2.942,377,2.942]],["title/index.html",[8,0.293,378,2.665,379,2.665]],["body/index.html",[5,0.306,11,2.788,14,0.031,22,0.014,23,0.014,44,0.766,85,0.917,93,2.23,140,1.658,238,1.125,276,1.457,299,1.125,300,2.319,312,2.016,353,2.319,380,1.267,381,2.778,382,1.745,383,1.745,384,1.745,385,1.745,386,1.745,387,1.745,388,1.745,389,5.561,390,2.319,391,1.457,392,1.745,393,3.944,394,1.745,395,1.745,396,1.745,397,2.778,398,2.778,399,1.745,400,1.745,401,1.745,402,1.745,403,2.778,404,2.778,405,2.778,406,1.745,407,2.778,408,2.778,409,2.778,410,1.745,411,1.745,412,4.993,413,3.46,414,1.745,415,5.635,416,1.745,417,3.46,418,1.745,419,2.319,420,1.745,421,1.745,422,1.745,423,1.745,424,3.944,425,1.745,426,3.46,427,4.306,428,1.745,429,1.745,430,1.745,431,1.457,432,3.944,433,1.745,434,2.778,435,1.745,436,2.319,437,2.778,438,1.457,439,1.745,440,1.745,441,1.745,442,4.586,443,1.745,444,1.745,445,3.46,446,1.745,447,1.745,448,3.46,449,1.745,450,1.745,451,1.745,452,2.778,453,3.46,454,1.745,455,1.745,456,3.46,457,2.778,458,1.745,459,2.778,460,2.778,461,1.745,462,1.745,463,1.745,464,1.745,465,1.745,466,1.745,467,1.745,468,1.745,469,2.778,470,1.745,471,1.745,472,3.46,473,1.745,474,1.745,475,1.745,476,1.745,477,1.745,478,1.745,479,1.745,480,1.745,481,1.745,482,1.745,483,1.457,484,1.745,485,1.745,486,1.745,487,1.745,488,1.745,489,1.745,490,1.745,491,1.745,492,1.745,493,2.778,494,2.319,495,1.745,496,1.745,497,1.745]],["title/modules.html",[43,2.08]],["body/modules.html",[14,0.026,22,0.026,23,0.026,42,2.805,43,2.086,53,2.523,54,2.523,55,2.523,419,4.977,483,4.977,498,5.962,499,5.962]],["title/overview.html",[500,3.622]],["body/overview.html",[2,1.684,14,0.031,22,0.02,23,0.02,26,0.991,35,2.471,41,1.171,42,3.943,43,1.393,44,1.275,45,1.684,46,1.684,47,1.393,48,1.684,49,1.684,50,2.425,51,2.425,52,2.425,53,3.109,54,2.953,55,3.573,56,2.441,57,2.36,58,1.684,59,1.684,68,1.076,96,1.6,130,2.471,152,2.471,177,2.471,186,2.425,187,2.425,195,2.471,224,2.425,225,2.425,250,2.471,282,2.425,283,2.425,500,2.425,501,4.072,502,2.906,503,2.906]],["title/properties.html",[9,2.012,334,2.224]],["body/properties.html",[9,2.439,14,0.031,22,0.027,23,0.027,380,3.369,504,3.874,505,4.641,506,4.641,507,4.641,508,4.641]],["title/miscellaneous/variables.html",[355,1.717,509,3.196]],["body/miscellaneous/variables.html",[3,0.182,8,0.24,12,2.773,13,2.773,14,0.032,22,0.016,23,0.016,82,0.881,83,0.82,115,1.588,119,2.134,169,1.826,210,1.826,238,1.41,299,1.41,303,2.763,305,2.763,309,1.826,310,2.763,311,2.763,312,2.899,313,2.763,355,1.41,380,1.588,390,1.826,391,1.826,431,1.826,436,1.826,438,1.826,494,3.334,504,1.826,509,1.826,510,4.453,511,2.188,512,2.188,513,2.188,514,2.188,515,3.31,516,2.188,517,3.31,518,2.188,519,3.31,520,2.188,521,2.188,522,2.188,523,2.188,524,2.188,525,3.31,526,2.188,527,3.31,528,3.31,529,3.31,530,3.31,531,3.31,532,3.31,533,3.31,534,2.188,535,3.31,536,3.31,537,2.188,538,2.188,539,2.188,540,2.188,541,2.188,542,2.188,543,2.188,544,2.188,545,2.188,546,2.188,547,3.31,548,2.188,549,2.188,550,2.188,551,2.188,552,2.188,553,3.31,554,2.188,555,2.188,556,3.31,557,2.188,558,2.188,559,3.31,560,2.188,561,2.188,562,2.188,563,2.188,564,2.188,565,2.188,566,2.188,567,2.188,568,2.188,569,2.188,570,2.188,571,2.188,572,2.188,573,2.188]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":505,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":216,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["1.14.1",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["1].includes(obj.done",{"_index":120,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["3.0.0",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3306",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":501,"title":{},"body":{"overview.html":{}}}],["5.2.0",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":502,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":503,"title":{},"body":{"overview.html":{}}}],["abstract/abstract",{"_index":274,"title":{},"body":{"classes/TodoFactory.html":{}}}],["abstractfactory",{"_index":1,"title":{"classes/AbstractFactory.html":{}},"body":{"classes/AbstractFactory.html":{},"classes/TodoFactory.html":{},"coverage.html":{}}}],["abstractfactory:4",{"_index":263,"title":{},"body":{"classes/TodoFactory.html":{}}}],["according",{"_index":457,"title":{},"body":{"index.html":{}}}],["add",{"_index":466,"title":{},"body":{"index.html":{}}}],["api",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":238,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":244,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":25,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":75,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{}}}],["author",{"_index":508,"title":{},"body":{"properties.html":{}}}],["await",{"_index":143,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"injectables/ShowService.html":{}}}],["backend",{"_index":410,"title":{},"body":{"index.html":{}}}],["before",{"_index":381,"title":{},"body":{"index.html":{}}}],["below",{"_index":387,"title":{},"body":{"index.html":{}}}],["body",{"_index":87,"title":{},"body":{"controllers/CreateController.html":{},"controllers/EditController.html":{}}}],["boolean",{"_index":108,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["bootstrap",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":499,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":419,"title":{},"body":{"index.html":{},"modules.html":{}}}],["catch",{"_index":218,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["charset",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PrismaIndicatorService.html":{}}}],["check(key",{"_index":208,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractFactory.html":{},"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{}},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractFactory.html":{},"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":186,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":187,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":224,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":225,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":282,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":283,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["code",{"_index":411,"title":{},"body":{"index.html":{}}}],["collate",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectcoveragefrom",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compose",{"_index":407,"title":{},"body":{"index.html":{}}}],["computer",{"_index":388,"title":{},"body":{"index.html":{}}}],["conf",{"_index":310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":141,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"controllers/HealthController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/ShowService.html":{}}}],["constructor(prismaservice",{"_index":95,"title":{},"body":{"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/ShowService.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{}}}],["content",{"_index":103,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{}}}],["controller",{"_index":24,"title":{"controllers/AppController.html":{},"controllers/CreateController.html":{},"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"controllers/ShowController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CreateController.html":{},"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"controllers/ShowController.html":{},"coverage.html":{}}}],["controller('health",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CreateController.html":{},"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"controllers/ShowController.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["controllers/create/create.controller",{"_index":288,"title":{},"body":{"modules/TodoModule.html":{}}}],["controllers/delete/delete.controller",{"_index":289,"title":{},"body":{"modules/TodoModule.html":{}}}],["controllers/edit/edit.controller",{"_index":291,"title":{},"body":{"modules/TodoModule.html":{}}}],["controllers/show/show.controller",{"_index":293,"title":{},"body":{"modules/TodoModule.html":{}}}],["copy",{"_index":399,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":299,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coveragedirectory",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cp",{"_index":403,"title":{},"body":{"index.html":{}}}],["create",{"_index":93,"title":{},"body":{"injectables/CreateService.html":{},"injectables/FactoryService.html":{},"classes/TodoFactory.html":{},"index.html":{}}}],["create(data",{"_index":98,"title":{},"body":{"injectables/CreateService.html":{}}}],["create(inputdata",{"_index":264,"title":{},"body":{"classes/TodoFactory.html":{}}}],["createcontroller",{"_index":73,"title":{"controllers/CreateController.html":{}},"body":{"controllers/CreateController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["createmessage",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmessage(error",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":460,"title":{},"body":{"index.html":{}}}],["createservice",{"_index":56,"title":{"injectables/CreateService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{}}}],["createtodotdo",{"_index":78,"title":{"classes/CreateTodoTdo.html":{}},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/EditController.html":{},"classes/TodoFactory.html":{},"coverage.html":{}}}],["currentenv",{"_index":311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":409,"title":{},"body":{"index.html":{}}}],["data",{"_index":85,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"classes/TodoFactory.html":{},"index.html":{}}}],["data.id",{"_index":163,"title":{},"body":{"injectables/EditService.html":{}}}],["database",{"_index":424,"title":{},"body":{"index.html":{}}}],["db",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["decorators",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/CreateController.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"controllers/ShowController.html":{},"classes/TodoTdo.html":{}}}],["default",{"_index":12,"title":{},"body":{"classes/AbstractFactory.html":{},"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["define",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{}}}],["delete",{"_index":128,"title":{},"body":{"controllers/DeleteController.html":{},"injectables/DeleteService.html":{}}}],["delete('/todos/:id",{"_index":125,"title":{},"body":{"controllers/DeleteController.html":{}}}],["delete(id",{"_index":136,"title":{},"body":{"injectables/DeleteService.html":{}}}],["deletecontroller",{"_index":121,"title":{"controllers/DeleteController.html":{}},"body":{"controllers/DeleteController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["deleteservice",{"_index":130,"title":{"injectables/DeleteService.html":{}},"body":{"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":380,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":395,"title":{},"body":{"index.html":{}}}],["dev",{"_index":437,"title":{},"body":{"index.html":{}}}],["devand",{"_index":422,"title":{},"body":{"index.html":{}}}],["development",{"_index":436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dialect",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dir",{"_index":449,"title":{},"body":{"index.html":{}}}],["docker",{"_index":393,"title":{},"body":{"index.html":{}}}],["docs",{"_index":412,"title":{},"body":{"index.html":{}}}],["docs:db",{"_index":425,"title":{},"body":{"index.html":{}}}],["docsand",{"_index":416,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":300,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":444,"title":{},"body":{"index.html":{}}}],["done",{"_index":104,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{}}}],["dotenv",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":223,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["e",{"_index":219,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["e2e",{"_index":495,"title":{},"body":{"index.html":{}}}],["edit",{"_index":156,"title":{},"body":{"injectables/EditService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["edit(data",{"_index":158,"title":{},"body":{"injectables/EditService.html":{}}}],["edit(params",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editcontroller",{"_index":147,"title":{"controllers/EditController.html":{}},"body":{"controllers/EditController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["editservice",{"_index":152,"title":{"injectables/EditService.html":{}},"body":{"controllers/EditController.html":{},"injectables/EditService.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{}}}],["empty",{"_index":106,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["enableshutdownhooks",{"_index":232,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":235,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":312,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env('api_prefix",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('app_baseurl",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('app_frontend_url",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_dialect",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_host",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_name",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_password",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_port",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('database_username",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('node_env",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('npm_package_description",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('npm_package_name",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env('npm_package_version",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.example",{"_index":404,"title":{},"body":{"index.html":{}}}],["env.test",{"_index":405,"title":{},"body":{"index.html":{}}}],["environment",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erd",{"_index":432,"title":{},"body":{"index.html":{}}}],["error",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errors",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exceptionfactory",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["exceptionfactory(errors",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":21,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{}}}],["exports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["express",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":205,"title":{},"body":{"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"classes/TodoFactory.html":{}}}],["factories",{"_index":486,"title":{},"body":{"index.html":{}}}],["factory",{"_index":275,"title":{},"body":{"classes/TodoFactory.html":{}}}],["factory.ts",{"_index":7,"title":{},"body":{"classes/AbstractFactory.html":{},"classes/TodoFactory.html":{},"coverage.html":{}}}],["factory.ts:13",{"_index":268,"title":{},"body":{"classes/TodoFactory.html":{}}}],["factory.ts:20",{"_index":270,"title":{},"body":{"classes/TodoFactory.html":{}}}],["factory.ts:4",{"_index":17,"title":{},"body":{"classes/AbstractFactory.html":{}}}],["factory.ts:7",{"_index":265,"title":{},"body":{"classes/TodoFactory.html":{}}}],["factoryservice",{"_index":19,"title":{"injectables/FactoryService.html":{}},"body":{"classes/AbstractFactory.html":{},"injectables/FactoryService.html":{},"modules/PrismaModule.html":{},"coverage.html":{}}}],["factoryservice.create",{"_index":15,"title":{},"body":{"classes/AbstractFactory.html":{},"modules/PrismaModule.html":{},"classes/TodoFactory.html":{}}}],["failed",{"_index":221,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["faker",{"_index":272,"title":{},"body":{"classes/TodoFactory.html":{},"dependencies.html":{}}}],["faker.commerce.productdescription",{"_index":279,"title":{},"body":{"classes/TodoFactory.html":{}}}],["faker.datatype.boolean",{"_index":280,"title":{},"body":{"classes/TodoFactory.html":{}}}],["false",{"_index":109,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":453,"title":{},"body":{"index.html":{}}}],["findall",{"_index":199,"title":{},"body":{"injectables/IndexService.html":{}}}],["findone",{"_index":254,"title":{},"body":{"injectables/ShowService.html":{}}}],["findone(id",{"_index":256,"title":{},"body":{"injectables/ShowService.html":{}}}],["first",{"_index":491,"title":{},"body":{"index.html":{}}}],["fix",{"_index":462,"title":{},"body":{"index.html":{}}}],["frontendurl",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":356,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":260,"title":{},"body":{"classes/TodoFactory.html":{}}}],["generateseeders",{"_index":484,"title":{},"body":{"index.html":{}}}],["generator",{"_index":427,"title":{},"body":{"index.html":{}}}],["get('/todos",{"_index":193,"title":{},"body":{"controllers/IndexController.html":{}}}],["get('/todos/:id",{"_index":248,"title":{},"body":{"controllers/ShowController.html":{}}}],["get()@healthcheck",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(params",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":378,"title":{"index.html":{}},"body":{}}],["global",{"_index":227,"title":{},"body":{"modules/PrismaModule.html":{}}}],["globalsetup",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":433,"title":{},"body":{"index.html":{}}}],["groups",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guest",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["health",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":190,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["health/prisma",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["healthcheck",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckerror",{"_index":211,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["healthcheckerror('prisma",{"_index":220,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["healthcheckservice",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":167,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicator",{"_index":206,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["healthindicatorresult",{"_index":212,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["healthmodule",{"_index":53,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["host",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://127.0.0.1:8080",{"_index":418,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":441,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/docs",{"_index":423,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en/download",{"_index":392,"title":{},"body":{"index.html":{}}}],["https://www.docker.com/products/docker",{"_index":394,"title":{},"body":{"index.html":{}}}],["id",{"_index":127,"title":{},"body":{"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoTdo.html":{}}}],["ide",{"_index":482,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":242,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":18,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{}}}],["imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexcontroller",{"_index":191,"title":{"controllers/IndexController.html":{}},"body":{"controllers/IndexController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["indexservice",{"_index":195,"title":{"injectables/IndexService.html":{}},"body":{"controllers/IndexController.html":{},"injectables/IndexService.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{}}}],["indicator.service",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["indicator.service.ts",{"_index":204,"title":{},"body":{"injectables/PrismaIndicatorService.html":{},"coverage.html":{}}}],["indicator.service.ts:11",{"_index":207,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["indicator.service.ts:16",{"_index":209,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["indicator/prisma",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaIndicatorService.html":{},"coverage.html":{}}}],["inestapplication",{"_index":236,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":262,"title":{},"body":{"classes/TodoFactory.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"injectables/ShowService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"injectables/ShowService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"injectables/ShowService.html":{},"overview.html":{}}}],["inputdata",{"_index":266,"title":{},"body":{"classes/TodoFactory.html":{}}}],["inside",{"_index":402,"title":{},"body":{"index.html":{}}}],["install",{"_index":398,"title":{},"body":{"index.html":{}}}],["installation",{"_index":396,"title":{},"body":{"index.html":{}}}],["invoke",{"_index":76,"title":{},"body":{"controllers/CreateController.html":{},"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/IndexController.html":{},"controllers/ShowController.html":{}}}],["invoke(@body",{"_index":90,"title":{},"body":{"controllers/CreateController.html":{}}}],["invoke(@param('id",{"_index":132,"title":{},"body":{"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/ShowController.html":{}}}],["invoke(data",{"_index":77,"title":{},"body":{"controllers/CreateController.html":{}}}],["invoke(id",{"_index":123,"title":{},"body":{"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/ShowController.html":{}}}],["isboolean",{"_index":112,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["isboolean()@transform",{"_index":110,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["isnotempty",{"_index":113,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["isnotempty({message",{"_index":105,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["item",{"_index":142,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/ShowService.html":{}}}],["jest",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.config.ts",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jestconfigwithtsjest",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":391,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["js/faker",{"_index":273,"title":{},"body":{"classes/TodoFactory.html":{},"dependencies.html":{}}}],["json",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":210,"title":{},"body":{"injectables/PrismaIndicatorService.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":455,"title":{},"body":{"index.html":{}}}],["learn",{"_index":477,"title":{},"body":{"index.html":{}}}],["legend",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["license",{"_index":506,"title":{},"body":{"properties.html":{}}}],["line",{"_index":467,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["look",{"_index":476,"title":{},"body":{"index.html":{}}}],["main",{"_index":488,"title":{},"body":{"index.html":{}}}],["make",{"_index":383,"title":{},"body":{"index.html":{}}}],["make:migration",{"_index":461,"title":{},"body":{"index.html":{}}}],["makes",{"_index":464,"title":{},"body":{"index.html":{}}}],["matching",{"_index":23,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mentioned",{"_index":386,"title":{},"body":{"index.html":{}}}],["message",{"_index":117,"title":{},"body":{"classes/CreateTodoTdo.html":{},"injectables/DeleteService.html":{},"classes/TodoTdo.html":{}}}],["metadata",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{}}}],["migrate",{"_index":474,"title":{},"body":{"index.html":{}}}],["migrate:dev",{"_index":473,"title":{},"body":{"index.html":{}}}],["migration",{"_index":459,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":442,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":355,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":468,"title":{},"body":{"index.html":{}}}],["mode",{"_index":439,"title":{},"body":{"index.html":{}}}],["model",{"_index":458,"title":{},"body":{"index.html":{}}}],["models",{"_index":448,"title":{},"body":{"index.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["modulefileextensions",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":478,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":82,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"modules/TodoModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaIndicatorService.html":{},"dependencies.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/ShowService.html":{},"coverage.html":{},"index.html":{}}}],["node",{"_index":390,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["node_modules/prisma",{"_index":470,"title":{},"body":{"index.html":{}}}],["normal",{"_index":451,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":138,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/ShowService.html":{}}}],["npm",{"_index":389,"title":{},"body":{"index.html":{}}}],["npx",{"_index":426,"title":{},"body":{"index.html":{}}}],["null",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":124,"title":{},"body":{"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoTdo.html":{}}}],["obj",{"_index":118,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{}}}],["object",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduledestroy",{"_index":233,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":234,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":417,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"miscellaneous/functions.html":{}}}],["orm",{"_index":480,"title":{},"body":{"index.html":{}}}],["out",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["output",{"_index":471,"title":{},"body":{"index.html":{}}}],["overview",{"_index":500,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":334,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":129,"title":{},"body":{"controllers/DeleteController.html":{},"controllers/EditController.html":{},"controllers/ShowController.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsedbadrequestmessage",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseerrormessages",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseerrormessages(errors",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseint(env('database_port",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(env('port",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":431,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["possibleenvs",{"_index":313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/CreateController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["post('/todos",{"_index":79,"title":{},"body":{"controllers/CreateController.html":{}}}],["post(params",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":11,"title":{},"body":{"classes/AbstractFactory.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"classes/TodoFactory.html":{},"index.html":{}}}],["prisma/client",{"_index":241,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/erd.png",{"_index":434,"title":{},"body":{"index.html":{}}}],["prisma/factory/factory.service",{"_index":20,"title":{},"body":{"classes/AbstractFactory.html":{},"modules/PrismaModule.html":{}}}],["prisma/migrations",{"_index":475,"title":{},"body":{"index.html":{}}}],["prisma/models",{"_index":450,"title":{},"body":{"index.html":{}}}],["prisma/prisma.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":100,"title":{},"body":{"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/ShowService.html":{}}}],["prisma/schema.prisma",{"_index":456,"title":{},"body":{"index.html":{}}}],["prismaclient",{"_index":231,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaindicator",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["prismaindicatorservice",{"_index":177,"title":{"injectables/PrismaIndicatorService.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaIndicatorService.html":{},"coverage.html":{},"overview.html":{}}}],["prismamodule",{"_index":54,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":96,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ShowService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.env[key",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prodopen",{"_index":440,"title":{},"body":{"index.html":{}}}],["production",{"_index":438,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":414,"title":{},"body":{"index.html":{}}}],["promise",{"_index":161,"title":{},"body":{"injectables/EditService.html":{},"injectables/PrismaIndicatorService.html":{}}}],["proper",{"_index":401,"title":{},"body":{"index.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AbstractFactory.html":{},"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"properties.html":{}}}],["provide",{"_index":228,"title":{},"body":{"modules/PrismaModule.html":{}}}],["provider",{"_index":469,"title":{},"body":{"index.html":{}}}],["providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["put",{"_index":151,"title":{},"body":{"controllers/EditController.html":{}}}],["put('/todos/:id",{"_index":149,"title":{},"body":{"controllers/EditController.html":{}}}],["random",{"_index":430,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/CreateService.html":{},"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/ShowService.html":{}}}],["reflect",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":479,"title":{},"body":{"index.html":{}}}],["remove",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["remove(params",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removed",{"_index":146,"title":{},"body":{"injectables/DeleteService.html":{}}}],["reset",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["results",{"_index":22,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{}}}],["returns",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"miscellaneous/functions.html":{}}}],["roots",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":415,"title":{},"body":{"index.html":{}}}],["runner",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["running",{"_index":435,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":261,"title":{},"body":{"classes/TodoFactory.html":{}}}],["save(tododata",{"_index":269,"title":{},"body":{"classes/TodoFactory.html":{}}}],["schemix",{"_index":353,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["see",{"_index":413,"title":{},"body":{"index.html":{}}}],["seed",{"_index":489,"title":{},"body":{"index.html":{}}}],["seeders",{"_index":443,"title":{},"body":{"index.html":{}}}],["seedseeders",{"_index":485,"title":{},"body":{"index.html":{}}}],["serveit",{"_index":428,"title":{},"body":{"index.html":{}}}],["serverport",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/create/create.service",{"_index":287,"title":{},"body":{"modules/TodoModule.html":{}}}],["services/delete/delete.service",{"_index":290,"title":{},"body":{"modules/TodoModule.html":{}}}],["services/edit/edit.service",{"_index":292,"title":{},"body":{"modules/TodoModule.html":{}}}],["services/index/index.service",{"_index":286,"title":{},"body":{"modules/TodoModule.html":{}}}],["services/show/show.service",{"_index":294,"title":{},"body":{"modules/TodoModule.html":{}}}],["set",{"_index":400,"title":{},"body":{"index.html":{}}}],["setcontainer",{"_index":322,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setcontainer(app",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":406,"title":{},"body":{"index.html":{}}}],["setupfilesafterenv",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showcontroller",{"_index":246,"title":{"controllers/ShowController.html":{}},"body":{"controllers/ShowController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["showservice",{"_index":250,"title":{"injectables/ShowService.html":{}},"body":{"controllers/ShowController.html":{},"injectables/ShowService.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{}}}],["software",{"_index":385,"title":{},"body":{"index.html":{}}}],["somehow",{"_index":463,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractFactory.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/FactoryService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"modules/TodoModule.html":{},"classes/TodoTdo.html":{}}}],["spec\\\\.ts",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sql",{"_index":472,"title":{},"body":{"index.html":{}}}],["src",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/$1",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exceptionfactory.ts",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../setcontainer.ts",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/abstract/abstract",{"_index":6,"title":{},"body":{"classes/AbstractFactory.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/apps/model_name/factories",{"_index":487,"title":{},"body":{"index.html":{}}}],["src/config/index.ts",{"_index":309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db/seedstest",{"_index":490,"title":{},"body":{"index.html":{}}}],["src/health/health.controller.ts",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":188,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/prisma",{"_index":203,"title":{},"body":{"injectables/PrismaIndicatorService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/plugins/exceptionfactory.ts",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/plugins/setcontainer.ts",{"_index":321,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/factory/factory.service.ts",{"_index":165,"title":{},"body":{"injectables/FactoryService.html":{},"coverage.html":{}}}],["src/prisma/factory/factory.service.ts:6",{"_index":166,"title":{},"body":{"injectables/FactoryService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":226,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":230,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":237,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:16",{"_index":239,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":240,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/todo/controllers/create/create.controller.ts",{"_index":74,"title":{},"body":{"controllers/CreateController.html":{},"coverage.html":{}}}],["src/todo/controllers/create/create.controller.ts:11",{"_index":80,"title":{},"body":{"controllers/CreateController.html":{}}}],["src/todo/controllers/delete/delete.controller.ts",{"_index":122,"title":{},"body":{"controllers/DeleteController.html":{},"coverage.html":{}}}],["src/todo/controllers/delete/delete.controller.ts:10",{"_index":126,"title":{},"body":{"controllers/DeleteController.html":{}}}],["src/todo/controllers/edit/edit.controller.ts",{"_index":148,"title":{},"body":{"controllers/EditController.html":{},"coverage.html":{}}}],["src/todo/controllers/edit/edit.controller.ts:11",{"_index":150,"title":{},"body":{"controllers/EditController.html":{}}}],["src/todo/controllers/index/index.controller.ts",{"_index":192,"title":{},"body":{"controllers/IndexController.html":{},"coverage.html":{}}}],["src/todo/controllers/index/index.controller.ts:10",{"_index":194,"title":{},"body":{"controllers/IndexController.html":{}}}],["src/todo/controllers/show/show.controller.ts",{"_index":247,"title":{},"body":{"controllers/ShowController.html":{},"coverage.html":{}}}],["src/todo/controllers/show/show.controller.ts:10",{"_index":249,"title":{},"body":{"controllers/ShowController.html":{}}}],["src/todo/dto/createtodo.tdo.ts",{"_index":102,"title":{},"body":{"classes/CreateTodoTdo.html":{},"coverage.html":{}}}],["src/todo/dto/createtodo.tdo.ts:14",{"_index":111,"title":{},"body":{"classes/CreateTodoTdo.html":{}}}],["src/todo/dto/createtodo.tdo.ts:8",{"_index":107,"title":{},"body":{"classes/CreateTodoTdo.html":{}}}],["src/todo/dto/todotdo.ts",{"_index":295,"title":{},"body":{"classes/TodoTdo.html":{},"coverage.html":{}}}],["src/todo/dto/todotdo.ts:13",{"_index":296,"title":{},"body":{"classes/TodoTdo.html":{}}}],["src/todo/dto/todotdo.ts:19",{"_index":297,"title":{},"body":{"classes/TodoTdo.html":{}}}],["src/todo/dto/todotdo.ts:8",{"_index":298,"title":{},"body":{"classes/TodoTdo.html":{}}}],["src/todo/factories/toto",{"_index":259,"title":{},"body":{"classes/TodoFactory.html":{},"coverage.html":{}}}],["src/todo/services/create/create.service.ts",{"_index":92,"title":{},"body":{"injectables/CreateService.html":{},"coverage.html":{}}}],["src/todo/services/create/create.service.ts:6",{"_index":97,"title":{},"body":{"injectables/CreateService.html":{}}}],["src/todo/services/create/create.service.ts:9",{"_index":99,"title":{},"body":{"injectables/CreateService.html":{}}}],["src/todo/services/delete/delete.service.ts",{"_index":134,"title":{},"body":{"injectables/DeleteService.html":{},"coverage.html":{}}}],["src/todo/services/delete/delete.service.ts:5",{"_index":135,"title":{},"body":{"injectables/DeleteService.html":{}}}],["src/todo/services/delete/delete.service.ts:8",{"_index":137,"title":{},"body":{"injectables/DeleteService.html":{}}}],["src/todo/services/edit/edit.service.ts",{"_index":155,"title":{},"body":{"injectables/EditService.html":{},"coverage.html":{}}}],["src/todo/services/edit/edit.service.ts:6",{"_index":157,"title":{},"body":{"injectables/EditService.html":{}}}],["src/todo/services/edit/edit.service.ts:9",{"_index":160,"title":{},"body":{"injectables/EditService.html":{}}}],["src/todo/services/index/index.service.ts",{"_index":198,"title":{},"body":{"injectables/IndexService.html":{},"coverage.html":{}}}],["src/todo/services/index/index.service.ts:5",{"_index":200,"title":{},"body":{"injectables/IndexService.html":{}}}],["src/todo/services/index/index.service.ts:8",{"_index":201,"title":{},"body":{"injectables/IndexService.html":{}}}],["src/todo/services/show/show.service.ts",{"_index":253,"title":{},"body":{"injectables/ShowService.html":{},"coverage.html":{}}}],["src/todo/services/show/show.service.ts:6",{"_index":255,"title":{},"body":{"injectables/ShowService.html":{}}}],["src/todo/services/show/show.service.ts:9",{"_index":257,"title":{},"body":{"injectables/ShowService.html":{}}}],["src/todo/todo.module.ts",{"_index":284,"title":{},"body":{"modules/TodoModule.html":{}}}],["start",{"_index":382,"title":{},"body":{"index.html":{}}}],["started",{"_index":379,"title":{"index.html":{}},"body":{}}],["statements",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/AbstractFactory.html":{},"injectables/FactoryService.html":{},"classes/TodoFactory.html":{}}}],["status",{"_index":222,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["steps",{"_index":454,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateTodoTdo.html":{},"injectables/PrismaIndicatorService.html":{},"classes/TodoTdo.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":213,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["support",{"_index":483,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":384,"title":{},"body":{"index.html":{}}}],["svg",{"_index":498,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":420,"title":{},"body":{"index.html":{}}}],["swagger(openapi",{"_index":421,"title":{},"body":{"index.html":{}}}],["table",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["terminal",{"_index":397,"title":{},"body":{"index.html":{}}}],["terminusmodule",{"_index":189,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":494,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test/$1",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../edit.ts",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/.../get.ts",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/.../post.ts",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/.../remove.ts",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/.../truncate.ts",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/bootstrap.ts",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/helpers/truncate.ts",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test/methods/edit.ts",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test/methods/get.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test/methods/post.ts",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test/methods/remove.ts",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test/setup.ts",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test:cov",{"_index":497,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":496,"title":{},"body":{"index.html":{}}}],["testenvironment",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":493,"title":{},"body":{"index.html":{}}}],["thing",{"_index":447,"title":{},"body":{"index.html":{}}}],["this.$disconnect",{"_index":245,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":243,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.createservice.create(data",{"_index":91,"title":{},"body":{"controllers/CreateController.html":{}}}],["this.deleteservice.delete(id",{"_index":133,"title":{},"body":{"controllers/DeleteController.html":{}}}],["this.editservice.edit",{"_index":154,"title":{},"body":{"controllers/EditController.html":{}}}],["this.getstatus(key",{"_index":217,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["this.health.check",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.indexservice.findall",{"_index":197,"title":{},"body":{"controllers/IndexController.html":{}}}],["this.prisma.todo.create",{"_index":281,"title":{},"body":{"classes/TodoFactory.html":{}}}],["this.prismaindicator.check('prisma",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.prismaservice.$queryraw`select",{"_index":215,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["this.prismaservice.todo.create",{"_index":101,"title":{},"body":{"injectables/CreateService.html":{}}}],["this.prismaservice.todo.delete",{"_index":145,"title":{},"body":{"injectables/DeleteService.html":{}}}],["this.prismaservice.todo.findfirst",{"_index":144,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/ShowService.html":{}}}],["this.prismaservice.todo.findmany",{"_index":202,"title":{},"body":{"injectables/IndexService.html":{}}}],["this.prismaservice.todo.update",{"_index":164,"title":{},"body":{"injectables/EditService.html":{}}}],["this.showservice.findone(id",{"_index":252,"title":{},"body":{"controllers/ShowController.html":{}}}],["throw",{"_index":139,"title":{},"body":{"injectables/DeleteService.html":{},"injectables/EditService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/ShowService.html":{}}}],["timestamps",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":276,"title":{},"body":{"classes/TodoFactory.html":{},"index.html":{}}}],["todo/controllers/index/index.controller",{"_index":285,"title":{},"body":{"modules/TodoModule.html":{}}}],["todo/dto/createtodo.tdo",{"_index":89,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/EditController.html":{},"classes/TodoFactory.html":{}}}],["todo/dto/todotdo",{"_index":162,"title":{},"body":{"injectables/EditService.html":{}}}],["todo/services/create/create.service",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/CreateController.html":{}}}],["todo/services/delete/delete.service",{"_index":131,"title":{},"body":{"controllers/DeleteController.html":{}}}],["todo/services/edit/edit.service",{"_index":153,"title":{},"body":{"controllers/EditController.html":{}}}],["todo/services/index/index.service",{"_index":196,"title":{},"body":{"controllers/IndexController.html":{}}}],["todo/services/show/show.service",{"_index":251,"title":{},"body":{"controllers/ShowController.html":{}}}],["todo/todo.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["tododata",{"_index":271,"title":{},"body":{"classes/TodoFactory.html":{}}}],["todofactory",{"_index":258,"title":{"classes/TodoFactory.html":{}},"body":{"classes/TodoFactory.html":{},"coverage.html":{}}}],["todofactory.generate",{"_index":277,"title":{},"body":{"classes/TodoFactory.html":{}}}],["todofactory.save(todo",{"_index":278,"title":{},"body":{"classes/TodoFactory.html":{}}}],["todomodule",{"_index":55,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todotdo",{"_index":159,"title":{"classes/TodoTdo.html":{}},"body":{"injectables/EditService.html":{},"classes/TodoTdo.html":{},"coverage.html":{}}}],["top",{"_index":465,"title":{},"body":{"index.html":{}}}],["transform",{"_index":115,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":116,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{},"dependencies.html":{}}}],["true",{"_index":119,"title":{},"body":{"classes/CreateTodoTdo.html":{},"injectables/PrismaIndicatorService.html":{},"classes/TodoTdo.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":214,"title":{},"body":{"injectables/PrismaIndicatorService.html":{}}}],["ts",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":83,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"classes/CreateTodoTdo.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"injectables/EditService.html":{},"injectables/IndexService.html":{},"injectables/PrismaIndicatorService.html":{},"injectables/PrismaService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":481,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":452,"title":{},"body":{"index.html":{}}}],["t|j)s",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":492,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":86,"title":{},"body":{"controllers/CreateController.html":{},"injectables/CreateService.html":{},"controllers/DeleteController.html":{},"injectables/DeleteService.html":{},"controllers/EditController.html":{},"controllers/IndexController.html":{},"injectables/IndexService.html":{},"controllers/ShowController.html":{},"injectables/ShowService.html":{}}}],["unlicensed",{"_index":507,"title":{},"body":{"properties.html":{}}}],["up",{"_index":408,"title":{},"body":{"index.html":{}}}],["url",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":429,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":229,"title":{},"body":{"modules/PrismaModule.html":{}}}],["utf8mb4",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utf8mb4_unicode_ci",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerror",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":114,"title":{},"body":{"classes/CreateTodoTdo.html":{},"classes/TodoTdo.html":{},"dependencies.html":{}}}],["value",{"_index":13,"title":{},"body":{"classes/AbstractFactory.html":{},"classes/CreateTodoTdo.html":{},"classes/TodoFactory.html":{},"classes/TodoTdo.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":509,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":504,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":445,"title":{},"body":{"index.html":{}}}],["yes",{"_index":267,"title":{},"body":{"classes/TodoFactory.html":{}}}],["yourself",{"_index":446,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PrismaModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractFactory.html":{"url":"classes/AbstractFactory.html","title":"class - AbstractFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/abstract/abstract-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                prisma\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FactoryService.create()\n                    \n                \n                    \n                        \n                                Defined in src/abstract/abstract-factory.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FactoryService } from '@/prisma/factory/factory.service';\n\nexport class AbstractFactory {\n    static prisma = FactoryService.create();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateService\n\nCreateService\n\nAppModule -->\n\nCreateService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CreateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            TodoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AppService } from '@/app.service';\nimport { TodoModule } from '@/todo/todo.module';\nimport { AppController } from '@/app.controller';\nimport { PrismaModule } from '@/prisma/prisma.module';\nimport { HealthModule } from '@/health/health.module';\nimport { CreateService } from '@/todo/services/create/create.service';\n\n@Module({\n    imports: [PrismaModule, HealthModule, TodoModule],\n    controllers: [AppController],\n    providers: [AppService, CreateService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreateController.html":{"url":"controllers/CreateController.html","title":"controller - CreateController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreateController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/create/create.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                invoke\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        invoke\n                        \n                    \n                \n            \n            \n                \n                    \n                    invoke(data: CreateTodoTdo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/todos')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/create/create.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTodoTdo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\n\nimport { CreateTodoTdo } from '@/todo/dto/createTodo.tdo';\nimport { CreateService } from '@/todo/services/create/create.service';\n\n@Controller()\nexport class CreateController {\n    constructor(private createService: CreateService) {}\n\n    @Post('/todos')\n    async invoke(@Body() data: CreateTodoTdo) {\n        return this.createService.create(data);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateService.html":{"url":"injectables/CreateService.html","title":"injectable - CreateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/create/create.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/create/create.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateTodoTdo)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/create/create.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTodoTdo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '@/prisma/prisma.service';\nimport { CreateTodoTdo } from '@/todo/dto/createTodo.tdo';\n\n@Injectable()\nexport class CreateService {\n    constructor(private readonly prismaService: PrismaService) {}\n\n    async create(data: CreateTodoTdo) {\n        return this.prismaService.todo.create({\n            data\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTodoTdo.html":{"url":"classes/CreateTodoTdo.html","title":"class - CreateTodoTdo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTodoTdo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/createTodo.tdo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                done\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/createTodo.tdo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/createTodo.tdo.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class CreateTodoTdo {\n    @IsNotEmpty({\n        message: 'Should not be empty'\n    })\n    content: string;\n\n    @IsBoolean()\n    @Transform(({ obj }) => {\n        return [true, 'true', 1].includes(obj.done);\n    })\n    done: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeleteController.html":{"url":"controllers/DeleteController.html","title":"controller - DeleteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeleteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/delete/delete.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                invoke\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        invoke\n                        \n                    \n                \n            \n            \n                \n                    \n                    invoke(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/todos/:id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/delete/delete.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param } from '@nestjs/common';\n\nimport { DeleteService } from '@/todo/services/delete/delete.service';\n\n@Controller()\nexport class DeleteController {\n    constructor(private deleteService: DeleteService) {}\n\n    @Delete('/todos/:id')\n    async invoke(@Param('id') id: number) {\n        return this.deleteService.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteService.html":{"url":"injectables/DeleteService.html","title":"injectable - DeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/delete/delete.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/delete/delete.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/delete/delete.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class DeleteService {\n    constructor(private readonly prismaService: PrismaService) {}\n\n    async delete(id: number) {\n        if (!id) {\n            throw new NotFoundException();\n        }\n\n        const item = await this.prismaService.todo.findFirst({ where: { id } });\n\n        if (!item) {\n            throw new NotFoundException();\n        }\n\n        await this.prismaService.todo.delete({ where: { id } });\n\n        return { message: 'removed' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EditController.html":{"url":"controllers/EditController.html","title":"controller - EditController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EditController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/edit/edit.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                invoke\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        invoke\n                        \n                    \n                \n            \n            \n                \n                    \n                    invoke(id: number, data: CreateTodoTdo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/todos/:id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/edit/edit.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateTodoTdo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Put } from '@nestjs/common';\n\nimport { EditService } from '@/todo/services/edit/edit.service';\nimport { CreateTodoTdo } from '@/todo/dto/createTodo.tdo';\n\n@Controller()\nexport class EditController {\n    constructor(private editService: EditService) {}\n\n    @Put('/todos/:id')\n    async invoke(@Param('id') id: number, @Body() data: CreateTodoTdo) {\n        return this.editService.edit({ id, ...data });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditService.html":{"url":"injectables/EditService.html","title":"injectable - EditService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/edit/edit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                edit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/edit/edit.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(data: TodoTdo)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/edit/edit.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                TodoTdo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { TodoTdo } from '@/todo/dto/todoTdo';\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class EditService {\n    constructor(private readonly prismaService: PrismaService) {}\n\n    async edit(data: TodoTdo): Promise {\n        if (!data || !data.id) {\n            throw new NotFoundException();\n        }\n\n        const item = await this.prismaService.todo.findFirst({\n            where: { id: data.id }\n        });\n\n        if (!item) {\n            throw new NotFoundException();\n        }\n\n        return this.prismaService.todo.update({\n            data: data,\n            where: { id: data.id }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactoryService.html":{"url":"injectables/FactoryService.html","title":"injectable - FactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/factory/factory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/factory/factory.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class FactoryService {\n    static create() {\n        return new PrismaService();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService } from '@nestjs/terminus';\nimport { PrismaIndicatorService } from '@/health/prisma-indicator/prisma-indicator.service';\n\n@Controller('health')\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private prismaIndicator: PrismaIndicatorService\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([() => this.prismaIndicator.check('prisma')]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\n\nPrismaIndicatorService\n\nPrismaIndicatorService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nPrismaIndicatorService->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaIndicatorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from '@/health/health.controller';\nimport { PrismaIndicatorService } from '@/health/prisma-indicator/prisma-indicator.service';\n\n@Module({\n    imports: [TerminusModule],\n    controllers: [HealthController],\n    providers: [PrismaIndicatorService]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IndexController.html":{"url":"controllers/IndexController.html","title":"controller - IndexController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IndexController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/index/index.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                invoke\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        invoke\n                        \n                    \n                \n            \n            \n                \n                    \n                    invoke()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/todos')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/index/index.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport { IndexService } from '@/todo/services/index/index.service';\n\n@Controller()\nexport class IndexController {\n    constructor(private indexService: IndexService) {}\n\n    @Get('/todos')\n    async invoke() {\n        return this.indexService.findAll();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IndexService.html":{"url":"injectables/IndexService.html","title":"injectable - IndexService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IndexService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/index/index.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/index/index.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/index/index.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class IndexService {\n    constructor(private readonly prismaService: PrismaService) {}\n\n    async findAll() {\n        return this.prismaService.todo.findMany();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaIndicatorService.html":{"url":"injectables/PrismaIndicatorService.html","title":"injectable - PrismaIndicatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaIndicatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/prisma-indicator/prisma-indicator.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/health/prisma-indicator/prisma-indicator.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/prisma-indicator/prisma-indicator.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n    HealthCheckError,\n    HealthIndicator,\n    HealthIndicatorResult\n} from '@nestjs/terminus';\n\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class PrismaIndicatorService extends HealthIndicator {\n    constructor(private readonly prismaService: PrismaService) {\n        super();\n    }\n\n    async check(key: string): Promise {\n        try {\n            await this.prismaService.$queryRaw`SELECT 1`;\n            return this.getStatus(key, true);\n        } catch (e) {\n            throw new HealthCheckError('Prisma check failed', {\n                prisma: { status: 'down' }\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { PrismaService } from '@/prisma/prisma.service';\nimport { FactoryService } from '@/prisma/factory/factory.service';\n\n@Global()\n@Module({\n    providers: [\n        {\n            provide: PrismaService,\n            useValue: FactoryService.create()\n        }\n    ],\n    exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Prisma, PrismaClient } from '@prisma/client';\nimport { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\n\n@Injectable()\nexport class PrismaService\n    extends PrismaClient\n    implements OnModuleInit\n{\n    async onModuleInit() {}\n    async enableShutdownHooks(app: INestApplication) {\n        this.$on('beforeExit', async () => {\n            await app.close();\n        });\n    }\n\n    onModuleDestroy() {\n        return this.$disconnect();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShowController.html":{"url":"controllers/ShowController.html","title":"controller - ShowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/show/show.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                invoke\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        invoke\n                        \n                    \n                \n            \n            \n                \n                    \n                    invoke(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/todos/:id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/show/show.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\n\nimport { ShowService } from '@/todo/services/show/show.service';\n\n@Controller()\nexport class ShowController {\n    constructor(private showService: ShowService) {}\n\n    @Get('/todos/:id')\n    async invoke(@Param('id') id: number) {\n        return this.showService.findOne(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShowService.html":{"url":"injectables/ShowService.html","title":"injectable - ShowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/show/show.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/show/show.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/show/show.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\n\nimport { PrismaService } from '@/prisma/prisma.service';\n\n@Injectable()\nexport class ShowService {\n    constructor(private readonly prismaService: PrismaService) {}\n\n    async findOne(id: number) {\n        if (!id) {\n            throw new NotFoundException();\n        }\n\n        const item = await this.prismaService.todo.findFirst({\n            where: { id }\n        });\n\n        if (!item) {\n            throw new NotFoundException();\n        }\n\n        return item;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoFactory.html":{"url":"classes/TodoFactory.html","title":"class - TodoFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/factories/toto-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                generate\n                            \n                            \n                                    Static\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FactoryService.create()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractFactory:4\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(inputData?: CreateTodoTdo)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/factories/toto-factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                CreateTodoTdo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        generate\n                        \n                    \n                \n            \n            \n                \n                    \n                    generate()\n                \n            \n\n\n            \n                \n                    Defined in src/todo/factories/toto-factory.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { content: any; done: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(todoData: CreateTodoTdo)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/factories/toto-factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoData\n                                    \n                                                CreateTodoTdo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { faker } from '@faker-js/faker';\n\nimport { CreateTodoTdo } from '@/todo/dto/createTodo.tdo';\nimport { AbstractFactory } from '@/abstract/abstract-factory';\n\nexport class TodoFactory extends AbstractFactory {\n    static create(inputData?: CreateTodoTdo) {\n        const todo = inputData || TodoFactory.generate();\n\n        return TodoFactory.save(todo);\n    }\n\n    static generate() {\n        return {\n            content: faker.commerce.productDescription(),\n            done: faker.datatype.boolean()\n        };\n    }\n\n    static save(todoData: CreateTodoTdo) {\n        return this.prisma.todo.create({ data: todoData });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nCreateService\n\nCreateService\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nCreateService->TodoModule\n\n\n\n\n\nDeleteService\n\nDeleteService\n\nTodoModule -->\n\nDeleteService->TodoModule\n\n\n\n\n\nEditService\n\nEditService\n\nTodoModule -->\n\nEditService->TodoModule\n\n\n\n\n\nIndexService\n\nIndexService\n\nTodoModule -->\n\nIndexService->TodoModule\n\n\n\n\n\nShowService\n\nShowService\n\nTodoModule -->\n\nShowService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateService\n                        \n                        \n                            DeleteService\n                        \n                        \n                            EditService\n                        \n                        \n                            IndexService\n                        \n                        \n                            ShowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IndexController\n                        \n                        \n                            CreateController\n                        \n                        \n                            DeleteController\n                        \n                        \n                            EditController\n                        \n                        \n                            ShowController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IndexController } from '@/todo/controllers/index/index.controller';\nimport { IndexService } from './services/index/index.service';\nimport { CreateService } from './services/create/create.service';\nimport { CreateController } from './controllers/create/create.controller';\nimport { DeleteController } from './controllers/delete/delete.controller';\nimport { DeleteService } from './services/delete/delete.service';\nimport { EditController } from './controllers/edit/edit.controller';\nimport { EditService } from './services/edit/edit.service';\nimport { ShowController } from './controllers/show/show.controller';\nimport { ShowService } from './services/show/show.service';\n\n@Module({\n    controllers: [IndexController, CreateController, DeleteController, EditController, ShowController],\n    providers: [IndexService, CreateService, DeleteService, EditService, ShowService]\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoTdo.html":{"url":"classes/TodoTdo.html","title":"class - TodoTdo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoTdo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/dto/todoTdo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                done\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/todoTdo.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/todoTdo.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/dto/todoTdo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsBoolean, IsNotEmpty } from 'class-validator';\n\nexport class TodoTdo {\n    @IsNotEmpty({\n        message: 'Should not be empty'\n    })\n    id: number;\n\n    @IsNotEmpty({\n        message: 'Should not be empty'\n    })\n    content: string;\n\n    @IsBoolean()\n    @Transform(({ obj }) => {\n        return [true, 'true', 1].includes(obj.done);\n    })\n    done: boolean = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/abstract/abstract-factory.ts\n            \n            class\n            AbstractFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            conf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            currentEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            possibleEnvs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/prisma-indicator/prisma-indicator.service.ts\n            \n            injectable\n            PrismaIndicatorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/exceptionFactory.ts\n            \n            function\n            createMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/exceptionFactory.ts\n            \n            function\n            exceptionFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/exceptionFactory.ts\n            \n            function\n            parseErrorMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/setContainer.ts\n            \n            function\n            setContainer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/factory/factory.service.ts\n            \n            injectable\n            FactoryService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/todo/controllers/create/create.controller.ts\n            \n            controller\n            CreateController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/controllers/delete/delete.controller.ts\n            \n            controller\n            DeleteController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/controllers/edit/edit.controller.ts\n            \n            controller\n            EditController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/controllers/index/index.controller.ts\n            \n            controller\n            IndexController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/controllers/show/show.controller.ts\n            \n            controller\n            ShowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/dto/createTodo.tdo.ts\n            \n            class\n            CreateTodoTdo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/dto/todoTdo.ts\n            \n            class\n            TodoTdo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/todo/factories/toto-factory.ts\n            \n            class\n            TodoFactory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/todo/services/create/create.service.ts\n            \n            injectable\n            CreateService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/services/delete/delete.service.ts\n            \n            injectable\n            DeleteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/services/edit/edit.service.ts\n            \n            injectable\n            EditService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/services/index/index.service.ts\n            \n            injectable\n            IndexService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/services/show/show.service.ts\n            \n            injectable\n            ShowService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                test/helpers/truncate.ts\n            \n            function\n            truncate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/methods/edit.ts\n            \n            function\n            edit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/methods/get.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/methods/post.ts\n            \n            function\n            post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/methods/remove.ts\n            \n            function\n            remove\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^8.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/terminus : ^10.0.1\n        \n            @prisma/client : ^5.2.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            schemix : ^1.14.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createMessage   (src/.../exceptionFactory.ts)\n                        \n                        \n                            edit   (test/.../edit.ts)\n                        \n                        \n                            exceptionFactory   (src/.../exceptionFactory.ts)\n                        \n                        \n                            get   (test/.../get.ts)\n                        \n                        \n                            parseErrorMessages   (src/.../exceptionFactory.ts)\n                        \n                        \n                            post   (test/.../post.ts)\n                        \n                        \n                            remove   (test/.../remove.ts)\n                        \n                        \n                            setContainer   (src/.../setContainer.ts)\n                        \n                        \n                            truncate   (test/.../truncate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/plugins/exceptionFactory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMessage\n                        \n                    \n                \n            \n            \n                \ncreateMessage(error: ValidationError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            ValidationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exceptionFactory\n                        \n                    \n                \n            \n            \n                \nexceptionFactory(errors)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseErrorMessages\n                        \n                    \n                \n            \n            \n                \nparseErrorMessages(errors)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParsedBadRequestMessage[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    test/methods/edit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    test/methods/get.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    test/methods/post.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    test/methods/remove.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/plugins/setContainer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setContainer\n                        \n                    \n                \n            \n            \n                \nsetContainer(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    test/helpers/truncate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        truncate\n                        \n                    \n                \n            \n            \n                \ntruncate()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nBefore start\nMake sure you have software mentioned below on your computer:\n\nNPM and NODE JS\nhttps://nodejs.org/en/download/\nDocker\nhttps://www.docker.com/products/docker-desktop\n\nInstallation\nFrom terminal\n#install dependencies\nnpm install\n\n# copy file and set proper data inside\ncp .env.example .env\n\ncp .env.example .env.test\n\n#docker setup\ndocker-compose up -d Documentation\nBackend code docs\nTo see project documentation run\nnpm run docsand open\nhttp://127.0.0.1:8080 in browser\nSwagger\nTo see Swagger(OpenApi):\n  npm run devAnd open\nhttp://localhost:3000/docs#/\nDatabase docs\nDocs\nnpm run docs:db\n#or \nnpx prisma-docs-generator serveIt uses random port - see terminal\nERD of database\nERD graph of database is in : prisma/ERD.png\nRunning the app\n# development\n$ npm run dev\n\n# production mode\n$ npm run prodOpen http://localhost:3000 in browser\nMigrations and Seeders\nMigrations\nYou don't have to write migrations by yourself - the only thing you have to do is to write schemix-models. Models are in\ndir : prisma/models, and are normal Typescript files.\nSteps:\n\nyou write models in typescript (not Prisma language)\ncreate prisma file (prisma/schema.prisma) with migrations according to model\n\n# Create new migration (it creates new prisma/schema.prisma)\nnpm run make:migration //todo - fix it somehow - it makes docs for database\n\nopen prisma/schema.prisma, and on top of file add line :\n\n# it can be missing\ngenerator docs {\n  provider = \"node node_modules/prisma-docs-generator\"\n}\n\ngenerator erd {\n  provider = \"prisma-erd-generator\"\n  output = \"../prisma/ERD.png\"\n}\n\ncreate new sql migrations according\n\n# Run Migration for Development:\nnpm run migrate:dev\n#or \nnpx prisma migrate dev\n\nprisma creates SQL files with migrations, they are sql files, in prisma/migrations/\n\nLook schemix to learn more.\n\nrefresh ORM (types, docs, ide support )\n\n npx prisma generateSeeders\nnpm run seedSeeders are in\n# Factories\nsrc/apps/Model_name/factories\n\n# main seed file\nsrc/db/seedsTest\n# Before first run\ndocker-compose --env-file .env.test  up -d# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateService\n\nCreateService\n\nTodoModule -->\n\nCreateService->TodoModule\n\n\n\nAppModule -->\n\nCreateService->AppModule\n\n\n\n\n\nPrismaIndicatorService\n\nPrismaIndicatorService\n\nHealthModule -->\n\nPrismaIndicatorService->HealthModule\n\n\n\n\n\nDeleteService\n\nDeleteService\n\nTodoModule -->\n\nDeleteService->TodoModule\n\n\n\n\n\nEditService\n\nEditService\n\nTodoModule -->\n\nEditService->TodoModule\n\n\n\n\n\nIndexService\n\nIndexService\n\nTodoModule -->\n\nIndexService->TodoModule\n\n\n\n\n\nShowService\n\nShowService\n\nTodoModule -->\n\nShowService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            conf   (src/.../index.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            currentEnv   (src/.../index.ts)\n                        \n                        \n                            env   (src/.../index.ts)\n                        \n                        \n                            possibleEnvs   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        conf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    info: {\n        name: env('npm_package_name'),\n        version: env('npm_package_version'),\n        description: env('npm_package_description'),\n        host: env('APP_BASEURL')\n    },\n    api: {\n        prefix: env('API_PREFIX', 'api')\n    },\n    app: {\n        env: env('NODE_ENV'),\n        serverPort: parseInt(env('PORT', 3000)),\n        frontendUrl: env('APP_FRONTEND_URL')\n    },\n    db: {\n        url:\n            env('DATABASE_DIALECT', 'mysql') +\n            '://' +\n            env('DATABASE_USERNAME', 'guest') +\n            ':' +\n            env('DATABASE_PASSWORD', 'guest') +\n            '@' +\n            env('DATABASE_HOST', 'localhost') +\n            ':' +\n            env('DATABASE_PORT', 3306) +\n            '/' +\n            env('DATABASE_NAME', 'db'),\n        host: env('DATABASE_HOST', 'localhost'),\n        name: env('DATABASE_NAME'),\n        username: env('DATABASE_USERNAME'),\n        password: env('DATABASE_PASSWORD'),\n        dialect: env('DATABASE_DIALECT', 'mysql'),\n        port: parseInt(env('DATABASE_PORT', 3306)),\n        define: {\n            charset: 'utf8mb4',\n            collate: 'utf8mb4_unicode_ci',\n            timestamps: true\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : env('NODE_ENV')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (key, defaultValue = null) => process.env[key] || defaultValue\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        possibleEnvs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['production', 'development', 'test']\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JestConfigWithTsJest\n\n                    \n                \n                \n                    \n                        Default value : {\n    verbose: true,\n    testEnvironment: 'jest-environment-node',\n    collectCoverageFrom: ['**/*.(t|j)s'],\n    moduleFileExtensions: ['js', 'json', 'ts'],\n    testRegex: '.*\\\\.spec\\\\.ts$',\n    transform: {\n        '^.+\\\\.(t|j)s$': 'ts-jest'\n    },\n    coverageDirectory: '../coverage',\n    moduleNameMapper: {\n        '@/(.*)': '/src/$1',\n        '@test/(.*)': '/test/$1'\n    },\n    runner: 'groups',\n    roots: ['./src/', './test/'],\n    globalSetup: './test/bootstrap.ts',\n    setupFilesAfterEnv: ['./test/setup.ts']\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
